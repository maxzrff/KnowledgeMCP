[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "knowledge-mcp"
version = "1.0.0"
description = "MCP Knowledge Server for semantic document search"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "KnowledgeMCP Team"}
]
keywords = ["mcp", "knowledge", "semantic-search", "embeddings", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "mcp>=0.9.0",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.10.0",
    "python-docx>=1.0.0",
    "python-pptx>=0.6.0",
    "openpyxl>=3.1.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "Pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "pyyaml>=6.0",
    "aiofiles>=23.2.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "PT", "SIM", "RET"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
